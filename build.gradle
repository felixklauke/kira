plugins {
  id 'java-library'
  id 'maven-publish'
  id 'signing'
  id 'jacoco'
}

repositories {
  mavenLocal()
  mavenCentral()
}

group = 'com.felixklauke'
version = '0.7.0'

java {
  sourceCompatibility = '18'
  targetCompatibility = '18'
  withJavadocJar()
  withSourcesJar()
}

dependencies {
  implementation group: 'com.google.inject', name: 'guice', version: '5.1.0'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

jar {
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
  from {
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  } {
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
  }
}

testing {
  suites {
    test {
      useJUnitJupiter('5.8.1')
    }
  }
}

test {
  finalizedBy jacocoTestReport
}

jacocoTestReport {
  dependsOn test
  reports {
    xml.required = false
    csv.required = false
  }
}

publishing {
  publications {
    maven(MavenPublication) {
      from(components.java)
      pom {
        name = 'kira'
      }
    }
  }
  repositories {
    maven {
      name = "GitHubPackages"
      url = "https://maven.pkg.github.com/felixklauke/kira"
      credentials {
        username = System.getenv("GITHUB_ACTOR")
        password = System.getenv("GITHUB_TOKEN")
      }
    }
  }
}

signing {
  def signingKey = findProperty("GPG_KEY")
  def signingPassword = findProperty("GPG_KEY_PASSPHRASE")
  useInMemoryPgpKeys(signingKey, signingPassword)
  sign publishing.publications.maven
}
