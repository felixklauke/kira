plugins {
  id "org.sonarqube" version "2.8"
}

group = 'com.felixklauke.kira'
version = '1.0.0-SNAPSHOT'

buildScan {
  termsOfServiceUrl = 'https://gradle.com/terms-of-service'
  termsOfServiceAgree = 'yes'
}

allprojects {
  apply plugin: 'java'
  apply plugin: 'maven-publish'
  apply plugin: 'checkstyle'
  apply plugin: 'jacoco'

  repositories {
    mavenLocal()
    maven {
      url = 'http://repo.maven.apache.org/maven2'
    }
  }

  dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
    testImplementation 'org.mockito:mockito-junit-jupiter:2.28.2'
  }

  test {
    useJUnitPlatform()
  }

  sourceCompatibility = '11'

  java {
    withSourcesJar()
    withJavadocJar()
  }

  checkstyle {
    maxWarnings = 0
    ignoreFailures = false
    toolVersion '8.27'
    checkstyleTest.enabled = false
  }

  publishing {
    publications {
      maven(MavenPublication) {
        from(components.java)
      }
    }
    repositories {
      maven {
        def releasesRepoUrl = 'https://repository.klauke-enterprises.com/repository/maven-releases/'
        def snapshotsRepoUrl = 'https://repository.klauke-enterprises.com/repository/maven-snapshots/'
        url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        credentials {
          username = System.getenv('NEXUS_USERNAME')
          password = System.getenv('NEXUS_PASSWORD')
        }
      }
    }
  }
}

task codeCoverageReport(type: JacocoReport) {
  executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

  subprojects.each {
    sourceSets it.sourceSets.main
  }

  reports {
    xml.enabled = true
    html.enabled = true
    xml.destination = new File("${buildDir}/reports/jacoco/report.xml")
    html.destination = new File("${buildDir}/reports/jacoco/report.html")
  }
}

sonarqube {
  properties {
    property "sonar.projectKey", "FelixKlauke_kira"
  }
}
